package com.spring.hibernate.sample.samplejpa;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

@SpringBootApplication
public class SampleJpaApplication {

	private static final Logger log = LoggerFactory.getLogger(SampleJpaApplication.class);

	public static void main(String[] args) {
		SpringApplication.run(SampleJpaApplication.class, args);
	}

	@Bean
	public CommandLineRunner demo(CustomerRepository repository) {
		return (args) -> {
			repository.save(new Customer("firstName1", "lastName1"));
			repository.save(new Customer("firstName2", "lastName2"));
			repository.save(new Customer("firstName3", "lastName3"));
			repository.save(new Customer("firstName4", "lastName4"));
			repository.save(new Customer("firstName5", "lastName5"));

			log.info("Customers found with findAll():");
			log.info("-------------------------------");
			for (Customer customer : repository.findAll()) {
				log.info(customer.toString());
			}
			log.info("");

			// fetch an individual customer by ID
			repository.findById(1L).ifPresent(customer -> {
				log.info("Customer found with findById(1L):");
				log.info("--------------------------------");
				log.info(customer.toString());
				log.info("");
			});
			
			
		};
	}
}
